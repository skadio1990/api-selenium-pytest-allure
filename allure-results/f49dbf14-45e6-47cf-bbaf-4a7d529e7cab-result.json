{"name": "Update User By ID", "status": "failed", "statusDetails": {"message": "AssertionError: assert '{\"id\":\"1\",\"name\":\"User\"}\\n' == {'id': '1', 'name': 'User2'}\n +  where '{\"id\":\"1\",\"name\":\"User\"}\\n' = <Response [200]>.text\n +    where <Response [200]> = <function UserRequest.get_user at 0x1056d22a0>(<utils.UserRequest object at 0x103a9a090>)\n +      where <function UserRequest.get_user at 0x1056d22a0> = DO.get_user\n +  and   {'id': '1', 'name': 'User2'} = <bound method UserRequest.data of <utils.UserRequest object at 0x1028512d0>>()\n +    where <bound method UserRequest.data of <utils.UserRequest object at 0x1028512d0>> = <utils.UserRequest object at 0x1028512d0>.data", "trace": "args = (), kwargs = {}\n\n    @allure.title(title)\n    @allure.description(description)\n    @allure.severity(severity)\n    @allure.parent_suite(\"Minute Media\")\n    @allure.suite(\"Tests for API features\")\n    @allure.label(\"owner\", \"Denis Krasilnikov\")\n    def wrapper(*args, **kwargs):\n>       return func(*args, **kwargs)\n\nutils.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @utils.allure_data(\"Update User By ID\",\n                       \"Description\", \"CRITICAL\")\n    def test_update_user_id():\n        response = DO.put(valid_user)\n        with allure.step(f\"response text: {response.text}\"):\n            pass\n        with allure.step(\"Assert Status Code 200\"):\n            assert response.status_code == 200\n        with allure.step(\"Assert User Name Changed\"):\n            print(DO.get_user(valid_user).text)\n            print(valid_user_2.data())\n>           assert DO.get_user(valid_user).text == valid_user_2.data()\nE           assert '{\"id\":\"1\",\"name\":\"User\"}\\n' == {'id': '1', 'name': 'User2'}\nE            +  where '{\"id\":\"1\",\"name\":\"User\"}\\n' = <Response [200]>.text\nE            +    where <Response [200]> = <function UserRequest.get_user at 0x1056d22a0>(<utils.UserRequest object at 0x103a9a090>)\nE            +      where <function UserRequest.get_user at 0x1056d22a0> = DO.get_user\nE            +  and   {'id': '1', 'name': 'User2'} = <bound method UserRequest.data of <utils.UserRequest object at 0x1028512d0>>()\nE            +    where <bound method UserRequest.data of <utils.UserRequest object at 0x1028512d0>> = <utils.UserRequest object at 0x1028512d0>.data\n\ntest_api.py:55: AssertionError"}, "description": "Description", "steps": [{"name": "response text: {\"id\":\"1\",\"name\":\"User\"}\n", "status": "passed", "start": 1702331604621, "stop": 1702331604621}, {"name": "Assert Status Code 200", "status": "passed", "start": 1702331604621, "stop": 1702331604621}, {"name": "Assert User Name Changed", "status": "failed", "statusDetails": {"message": "AssertionError: assert '{\"id\":\"1\",\"name\":\"User\"}\\n' == {'id': '1', 'name': 'User2'}\n +  where '{\"id\":\"1\",\"name\":\"User\"}\\n' = <Response [200]>.text\n +    where <Response [200]> = <function UserRequest.get_user at 0x1056d22a0>(<utils.UserRequest object at 0x103a9a090>)\n +      where <function UserRequest.get_user at 0x1056d22a0> = DO.get_user\n +  and   {'id': '1', 'name': 'User2'} = <bound method UserRequest.data of <utils.UserRequest object at 0x1028512d0>>()\n +    where <bound method UserRequest.data of <utils.UserRequest object at 0x1028512d0>> = <utils.UserRequest object at 0x1028512d0>.data\n", "trace": "  File \"/Users/skadio/selenium-pytest-allure/test_api.py\", line 55, in test_update_user_id\n    assert DO.get_user(valid_user).text == valid_user_2.data()\n"}, "start": 1702331604621, "stop": 1702331604623}], "attachments": [{"name": "stdout", "source": "010cc708-6dcb-417d-9f23-ec57ed9b4df2-attachment.txt", "type": "text/plain"}], "start": 1702331604620, "stop": 1702331604624, "uuid": "8e56c718-3216-41d7-ac69-e48dbb076a73", "historyId": "f189df9dfb5cb45628ebdaa1086d8f00", "testCaseId": "f189df9dfb5cb45628ebdaa1086d8f00", "fullName": "test_api#test_update_user_id", "labels": [{"name": "severity", "value": "CRITICAL"}, {"name": "parentSuite", "value": "Minute Media"}, {"name": "suite", "value": "Tests for API features"}, {"name": "owner", "value": "Denis Krasilnikov"}, {"name": "host", "value": "Deniss-Mac-mini.lan"}, {"name": "thread", "value": "48219-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}