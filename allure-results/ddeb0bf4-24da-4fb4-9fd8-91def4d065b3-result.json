{"name": "Get All Users (End)", "status": "failed", "statusDetails": {"message": "AssertionError: assert True == False\n +  where True = <function has_duplicates at 0x1056d2660>('[{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"\",\"name\":\"\"},{}]\\n', 'id')\n +    where <function has_duplicates at 0x1056d2660> = utils.has_duplicates\n +    and   '[{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"\",\"name\":\"\"},{}]\\n' = <Response [200]>.text", "trace": "args = (), kwargs = {}\n\n    @allure.title(title)\n    @allure.description(description)\n    @allure.severity(severity)\n    @allure.parent_suite(\"Minute Media\")\n    @allure.suite(\"Tests for API features\")\n    @allure.label(\"owner\", \"Denis Krasilnikov\")\n    def wrapper(*args, **kwargs):\n>       return func(*args, **kwargs)\n\nutils.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @utils.allure_data(\"Get All Users (End)\",\n                       \"Description\", \"CRITICAL\")\n    def test_get_all_users_begin():\n        response = DO.get_all_users()\n        with allure.step(f\"response text: {response.text}\"):\n            pass\n        with allure.step(\"Assert Status Code 200\"):\n            assert response.status_code == 200\n        with allure.step(\"Assert No Duplicates\"):\n>           assert utils.has_duplicates(response.text, 'id') == False\nE           assert True == False\nE            +  where True = <function has_duplicates at 0x1056d2660>('[{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"\",\"name\":\"\"},{}]\\n', 'id')\nE            +    where <function has_duplicates at 0x1056d2660> = utils.has_duplicates\nE            +    and   '[{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"\",\"name\":\"\"},{}]\\n' = <Response [200]>.text\n\ntest_api.py:137: AssertionError"}, "description": "Description", "steps": [{"name": "response text: [{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"\",\"name\":\"\"},{}]\n", "status": "passed", "start": 1702331604679, "stop": 1702331604679}, {"name": "Assert Status Code 200", "status": "passed", "start": 1702331604679, "stop": 1702331604679}, {"name": "Assert No Duplicates", "status": "failed", "statusDetails": {"message": "AssertionError: assert True == False\n +  where True = <function has_duplicates at 0x1056d2660>('[{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"\",\"name\":\"\"},{}]\\n', 'id')\n +    where <function has_duplicates at 0x1056d2660> = utils.has_duplicates\n +    and   '[{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"1\",\"name\":\"User\"},{\"id\":\"\",\"name\":\"\"},{}]\\n' = <Response [200]>.text\n", "trace": "  File \"/Users/skadio/selenium-pytest-allure/test_api.py\", line 137, in test_get_all_users_begin\n    assert utils.has_duplicates(response.text, 'id') == False\n"}, "start": 1702331604679, "stop": 1702331604679}], "start": 1702331604678, "stop": 1702331604680, "uuid": "f1c17e3d-d4e4-4668-9e87-424f0578533d", "historyId": "829e34843fe032d2e961a5d52954e0c2", "testCaseId": "829e34843fe032d2e961a5d52954e0c2", "fullName": "test_api#test_get_all_users_begin", "labels": [{"name": "severity", "value": "CRITICAL"}, {"name": "parentSuite", "value": "Minute Media"}, {"name": "suite", "value": "Tests for API features"}, {"name": "owner", "value": "Denis Krasilnikov"}, {"name": "host", "value": "Deniss-Mac-mini.lan"}, {"name": "thread", "value": "48219-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}